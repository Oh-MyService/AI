name: Deploy to Amazon Lightsail

on:
  push:
    branches: [ "main" ]

env:
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
  AWS_REGION: us-east-1

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push image to Amazon ECR Public
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: d0v2k3o3 # 본인의 alias 입력
        REPOSITORY: ohmyservice_ai # 본인의 repository명 입력
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --no-cache -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
        echo "image=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install SSH client and sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client sshpass

    - name: Create PowerShell script
      run: |
        echo "\$password = ConvertTo-SecureString '${{ secrets.SSH_PASSWORD }}' -AsPlainText -Force;" > deploy.ps1
        echo "\$credential = New-Object System.Management.Automation.PSCredential ('${{ secrets.SSH_USERNAME }}', \$password);" >> deploy.ps1
        echo "docker pull ${{ steps.build-image.outputs.image }};" >> deploy.ps1
        echo "docker stop ohmyservice_ai -ea silentlycontinue;" >> deploy.ps1
        echo "docker rm ohmyservice_ai -ea silentlycontinue;" >> deploy.ps1
        echo "docker run -d --name ohmyservice_ai -p 27272:27272 ${{ steps.build-image.outputs.image }};" >> deploy.ps1

    - name: Deploy to Windows Server
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -P 8022 deploy.ps1 ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }}:C:/Users/${{ secrets.SSH_USERNAME }}/deploy.ps1
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p 8022 ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "powershell -File C:/Users/${{ secrets.SSH_USERNAME }}/deploy.ps1"
