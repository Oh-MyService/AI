name: Deploy to Amazon Lightsail

on:
  push:
    branches: [ "main" ]

env:
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Deploy to Windows Server
      env:
        IMAGE: ${{ steps.build-image.outputs.image }}
      run: |
        pwsh -command "
        \$password = ConvertTo-SecureString '${{ secrets.SSH_PASSWORD }}' -AsPlainText -Force
        \$credential = New-Object System.Management.Automation.PSCredential ('${{ secrets.SSH_USERNAME }}', \$password)
        Invoke-Command -ComputerName '${{ secrets.SERVER_IP }}' -Credential \$credential -ScriptBlock {
          docker pull $using:IMAGE
          docker stop my-app -ea silentlycontinue
          docker rm my-app -ea silentlycontinue
          docker run -d --name my-app -p 27272:27272 $using:IMAGE
        }
        "
